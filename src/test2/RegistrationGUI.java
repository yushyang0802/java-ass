/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test2;

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;


/**
 *
 * @author ACER
 */
public class RegistrationGUI extends javax.swing.JFrame {
    
    
    
    /**
     * Creates new form Registration
     */
    public RegistrationGUI(){
        initComponents();
        
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        RegistrationLabel = new javax.swing.JLabel();
        UsernameLabel = new javax.swing.JLabel();
        RoleLabel = new javax.swing.JLabel();
        EnterPasswordLabel = new javax.swing.JLabel();
        ConfirmPasswordLabel = new javax.swing.JLabel();
        UsernameTextField = new javax.swing.JTextField();
        RoleComboBox = new javax.swing.JComboBox<>();
        PasswordField = new javax.swing.JPasswordField();
        ConfirmPasswordField = new javax.swing.JPasswordField();
        CreateAccountButton = new javax.swing.JButton();
        TNCCheckbox = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RegistrationLabel.setFont(new java.awt.Font("Lucida Sans", 0, 24)); // NOI18N
        RegistrationLabel.setText("REGISTRATION");

        UsernameLabel.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        UsernameLabel.setText("Username:");

        RoleLabel.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        RoleLabel.setText("Role:");

        EnterPasswordLabel.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        EnterPasswordLabel.setText("Password:");

        ConfirmPasswordLabel.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        ConfirmPasswordLabel.setText("Confirm Password:");

        UsernameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UsernameTextFieldActionPerformed(evt);
            }
        });

        RoleComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sales Manager", "Purchase Manager", "Admin" }));
        RoleComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RoleComboBoxActionPerformed(evt);
            }
        });

        PasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PasswordFieldActionPerformed(evt);
            }
        });

        ConfirmPasswordField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ConfirmPasswordFieldActionPerformed(evt);
            }
        });

        CreateAccountButton.setFont(new java.awt.Font("Rockwell Extra Bold", 0, 14)); // NOI18N
        CreateAccountButton.setText("CREATE");
        CreateAccountButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateAccountButtonActionPerformed(evt);
            }
        });

        TNCCheckbox.setFont(new java.awt.Font("Lucida Sans", 0, 14)); // NOI18N
        TNCCheckbox.setText("Accept Terms and Conditions");
        TNCCheckbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TNCCheckboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(RegistrationLabel)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(EnterPasswordLabel)
                                    .addComponent(ConfirmPasswordLabel)
                                    .addComponent(RoleLabel)
                                    .addComponent(UsernameLabel))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(RoleComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(PasswordField)
                                    .addComponent(UsernameTextField)
                                    .addComponent(ConfirmPasswordField)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(108, 108, 108)
                        .addComponent(TNCCheckbox))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(168, 168, 168)
                        .addComponent(CreateAccountButton)))
                .addContainerGap(133, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(RegistrationLabel)
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(UsernameLabel)
                    .addComponent(UsernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(RoleLabel)
                    .addComponent(RoleComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EnterPasswordLabel)
                    .addComponent(PasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ConfirmPasswordLabel)
                    .addComponent(ConfirmPasswordField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(TNCCheckbox)
                .addGap(18, 18, 18)
                .addComponent(CreateAccountButton)
                .addContainerGap(91, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void UsernameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UsernameTextFieldActionPerformed

    }//GEN-LAST:event_UsernameTextFieldActionPerformed

    private void RoleComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RoleComboBoxActionPerformed
        // TODO add your handling code here;
    }//GEN-LAST:event_RoleComboBoxActionPerformed

    private void PasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PasswordFieldActionPerformed

    private void ConfirmPasswordFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ConfirmPasswordFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ConfirmPasswordFieldActionPerformed

    private void CreateAccountButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateAccountButtonActionPerformed
        String username = UsernameTextField.getText();
        String role = RoleComboBox.getSelectedItem().toString();
        String password = new String(PasswordField.getPassword());
        String confirm = new String(ConfirmPasswordField.getPassword());
        
        User user = new User();
        user.setUsername(username);
        user.setRole(role);
        user.setPassword(password);
        user.setConfirm(confirm);
        
        // Validate username
        if (!username.matches("[a-zA-Z]+") || username.length() < 4 || username.length() > 12) {
            JOptionPane.showMessageDialog(null, "Invalid username format or length");
            UsernameTextField.setText("");
            ConfirmPasswordField.setText("");
            return; // Exit the method
        }

        // Validate password
        if (password.length() < 3 || !confirm.equals(password)) {
            JOptionPane.showMessageDialog(null, "Invalid password or password mismatch");
            PasswordField.setText("");
            ConfirmPasswordField.setText("");
            return; // Exit the method
        }

        // Validate terms and conditions
        if (!TNCCheckbox.isSelected()) {
            JOptionPane.showMessageDialog(null, "Please accept our terms and conditions");
            return; // Exit the method
        }

        // Proceed to save if all validations passed
        savetoFile(user);
        }

        private void savetoFile(User user) {
            try {
                String file_name = "account.txt";

                if (userExists(user.getUsername(), file_name)) {
                JOptionPane.showMessageDialog(null, "User already exists");
                return; // Exit the method
                }

                // Save the new user
                FileWriter fw = new FileWriter(file_name, true);
                PrintWriter pw = new PrintWriter(fw);
                pw.write(user.getUsername() + "," + user.getRole() + "," + user.getPassword() + "\n");
                JOptionPane.showMessageDialog(null, "Registration Complete");

                fw.close();
                pw.close();
                
                this.dispose();
                LoginGUI loginGUI = new LoginGUI();
                loginGUI.setVisible(true);

            } 
            catch (IOException error) {
            JOptionPane.showMessageDialog(null, "An error occurred while saving data.");
        }
    }

    private boolean userExists(String username, String file_name) {
        try (FileReader fr = new FileReader(file_name);
             BufferedReader br = new BufferedReader(fr)) {

            String record;
            while ((record = br.readLine()) != null) {
                String[] line = record.split(",");
                if (username.equals(line[0])) {
                    return true;
                }
            }

            return false;

        } 
        catch (IOException e) {
            JOptionPane.showMessageDialog(null, "An error occurred while checking user existence.");
            return false;
        }
        
        
        
    }//GEN-LAST:event_CreateAccountButtonActionPerformed

    private void TNCCheckboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TNCCheckboxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TNCCheckboxActionPerformed
       
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrationGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrationGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPasswordField ConfirmPasswordField;
    private javax.swing.JLabel ConfirmPasswordLabel;
    private javax.swing.JButton CreateAccountButton;
    private javax.swing.JLabel EnterPasswordLabel;
    private javax.swing.JPasswordField PasswordField;
    private javax.swing.JLabel RegistrationLabel;
    private javax.swing.JComboBox<String> RoleComboBox;
    private javax.swing.JLabel RoleLabel;
    private javax.swing.JCheckBox TNCCheckbox;
    private javax.swing.JLabel UsernameLabel;
    private javax.swing.JTextField UsernameTextField;
    // End of variables declaration//GEN-END:variables
}
