/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package test2;

import java.io.IOException;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class GeneratePurchaseOrder extends javax.swing.JFrame {
    private PurchaseRequisitionService service1;
    private PurchaseRequisitionService service2;

    /**
     * Creates new form GeneratePurchaseOrder
     */
    public GeneratePurchaseOrder() {
        initComponents();
        service1 = new PurchaseRequisitionService("purchase_requisition.txt");
        service2 = new PurchaseRequisitionService("purchase_order.txt");
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        showTable1();
        showTable2();
    }
    
    public void showTable1() {
        DefaultTableModel model1 = (DefaultTableModel) jTable1.getModel();
        model1.setRowCount(0);

        ArrayList<PurchaseRequisition> requisitions = service1.getAllPRtoCompany();
        for (PurchaseRequisition pr : requisitions) {
            model1.addRow(new Object[]{pr.getItemCode(), pr.getItemName(), pr.getPricePerItem(), pr.getQuantity(), pr.getTotalPrice(), pr.getSupplierID(),pr.getSupplierName()});
        }
    }
    
    public void showTable2() {
        DefaultTableModel model2 = (DefaultTableModel) jTable2.getModel();
        model2.setRowCount(0);

        ArrayList<PurchaseRequisition> requisitions = service2.getAllPRtoCompany();
        for (PurchaseRequisition pr : requisitions) {
            model2.addRow(new Object[]{pr.getItemCode(), pr.getItemName(), pr.getPricePerItem(), pr.getQuantity(), pr.getTotalPrice(),pr.getSupplierID(),pr.getSupplierName()});
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel3 = new javax.swing.JLabel();
        btnaddpo = new javax.swing.JButton();
        btnnext = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnback = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Purchases Requisition :");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Price Per Item(RM)", "Quantity", "Price(RM)","SupID","SupName"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        jLabel3.setText("Purchase Order:");

        btnaddpo.setText("Add To PO");
        btnaddpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnaddpoActionPerformed(evt);
            }
        });

        btnnext.setText("Next");
        btnnext.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnnextActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Generate Purchase Order");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Item ID", "Item Name", "Price Per Item(RM)", "Quantity", "Price(RM)","ComID","ComName"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        btnback.setText("Back");
        btnback.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnbackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(76, 76, 76)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnaddpo, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnnext, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(371, 371, 371))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 299, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(423, 423, 423))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 234, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnback, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnaddpo, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnnext, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(25, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnaddpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnaddpoActionPerformed
      
        DefaultTableModel model1 = (DefaultTableModel)jTable1.getModel();
        DefaultTableModel model2 = (DefaultTableModel)jTable2.getModel();

        if(jTable1.getSelectedRow()>=0){

            String ItemID = model1.getValueAt(jTable1.getSelectedRow(),0).toString();
            String ItemName = model1.getValueAt(jTable1.getSelectedRow(),1).toString();
            String Priceperitem = model1.getValueAt(jTable1.getSelectedRow(),2).toString();
            String Quantity = model1.getValueAt(jTable1.getSelectedRow(),3).toString();
            String Price = model1.getValueAt(jTable1.getSelectedRow(),4).toString();
            String ComID = model1.getValueAt(jTable1.getSelectedRow(),5).toString();
            String ComName = model1.getValueAt(jTable1.getSelectedRow(),6).toString();

            boolean itemExists = false;
            for (int i = 0;i<model2.getRowCount(); i++){
                if (ItemID.equals(model2.getValueAt(i,0).toString())){
                    int oldQuantity = Integer.parseInt(model2.getValueAt(i, 3).toString());
                    int newQuantity = Integer.parseInt(Quantity);
                    int PricePerItem = (int) Double.parseDouble(Price);
                    int totalQuantity = oldQuantity +newQuantity;
                    double newPrice = totalQuantity * PricePerItem;
                    model2.setValueAt(totalQuantity, i, 3);
                    String POItemID = model2.getValueAt(i,0).toString();
                    int a =Integer.parseInt(Priceperitem);
                    PurchaseRequisition entry1 = new PurchaseRequisition(ItemID,ItemName,a,totalQuantity,ComID,ComName);
                    if(POItemID.equals(ItemID)){
                            service2.deleteRequisition(POItemID,String.valueOf(oldQuantity));
                            service2.addRequisition(entry1);
                            service1.deleteRequisition(ItemID,Quantity);   
                    }
                    model1.removeRow(jTable1.getSelectedRow());
                    itemExists = true;
                    JOptionPane.showMessageDialog(this,"Success");
                    break;
                }
            }

            if(!itemExists){
                model2.addRow(new Object[]{ItemID, ItemName, Priceperitem, Quantity, Price,ComID,ComName});
                double a =Double.parseDouble(Priceperitem);
                int b =Integer.parseInt(Quantity);
                //String entry2 = ItemID + "/" + ItemName + "/" + Priceperitem + "/" + Quantity + "/" + Price;
                PurchaseRequisition entry2 = new PurchaseRequisition(ItemID ,  ItemName, a ,b ,ComID,ComName);
                    service2.addRequisition(entry2);
                    service1.deleteRequisition(ItemID,Quantity);
                    model1.removeRow(jTable1.getSelectedRow());
                    JOptionPane.showMessageDialog(this,"Success");
               
                

            }

        }
        else{
            if(jTable1.getSelectedRow()==0){
                JOptionPane.showMessageDialog(this,"Table is Empty");
            }else{
                JOptionPane.showMessageDialog(this,"Please Select Single Row To Delete");
            }
        }
    }//GEN-LAST:event_btnaddpoActionPerformed

    private void btnnextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnnextActionPerformed
        DisplayPurchaseOrder add = new DisplayPurchaseOrder();
        add.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnnextActionPerformed

    private void btnbackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnbackActionPerformed
        PurchaseOrderPage po = new PurchaseOrderPage();
        po.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnbackActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GeneratePurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GeneratePurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GeneratePurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GeneratePurchaseOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GeneratePurchaseOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnaddpo;
    private javax.swing.JButton btnback;
    private javax.swing.JButton btnnext;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    // End of variables declaration//GEN-END:variables
}
